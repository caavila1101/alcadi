# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: alcadii
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: mvp
# "service" is the name of this project. This will also be added to your AWS resource names.
service: mvp

params:
  default:
    tableName: "users-table-${sls:stage}" #Si el stage (entorno de ejecuci√≥n) es default tableName: "users-table-default" serverless offline --stage dev    

plugins:
  - serverless-dynamodb-local
  - serverless-offline
package:
  individually: true
  patterns: 
    - "!.dynamo.db" 
    - "!.node_modules"

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn] #est√° obteniendo el ARN (Amazon Resource Name) de la tabla UsersTable. Esto significa que los permisos se aplican √∫nicamente a la tabla DynamoDB creada en resources.
  environment:
    USERS_TABLE: ${param:tableName}
    DYNAMODB_ENDPOINT: http://localhost:8000 # Para conectarse a DynamoDB local

functions:
  get-users:
    handler: getUsers/handler.getUsers
    events:
      - http:
          path: users/{id}
          method: GET
  create-users:
    handler: createUsers/handler.createUser
    events:
      - http:
          path: users
          method: POST

resources:
  Resources:
    UsersTable: # üîπ Este es solo el identificador l√≥gico dentro de CloudFormation
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}

custom:
  dynamodb:
    stages:
      - offline
    start:
      port: 8000
      inMemory: true
      migrate: true 
      noStart: true  # Evita que Serverless intente iniciar DynamoDB
